void  util_func( int  ind , int  k , int  n , vector<vector<int>> &ans , vector<int> & ds)
    {
      if(k == 0){
         if(n == 0)
         {
          ans.push_back(ds);
         }
          return ;
      }
         if(ind>n) {
             return ;
         }
         ds.push_back(ind);
         util_func( ind+1 , k-1,n-ind , ans , ds);
         ds.pop_back();
     
     util_func( ind + 1, k , n , ans , ds);
    }

    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>> ans;
        vector<int> ds;
        if( k == 1)
        {
         for( int i=1;i<=9;i++)
         {
             if( n==i)
             {
               ds.push_back(i);
               ans.push_back(ds);
               return ans;
             }
         }
       }
        util_func( 1 , k , n , ans , ds);
        return ans;
    }
