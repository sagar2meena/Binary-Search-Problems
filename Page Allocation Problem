// header file
#include<iostream>
#include<climits>
using namespace std;
 // function Check Current mid value is feasible or not
bool isPossible( int arr[] , int n ,int m , int min_page)
{
    int studentRequired = 1 , sum = 0;
    for( int i=0 ; i<n ; i++)
    {
        if(arr[i] > min_page)
        {
            return false;
        }
        if(sum + arr[i] > min_page){
            studentRequired++;
            sum = arr[i];
        
            if(studentRequired > m){    // if student Required exceed number student then current solution is not feasible
             return false;
            }
        }else{
            sum += arr[i];
        }
}
return true;
}
// function Finding the  minimum possible of maximum Allocated Pages
int min_Page( int arr[] , int n , int m )
{
    int sum = 0;
    if(n<m)
    {
        return -1;
    }

    for(int i=0;i<n;i++)
    {
        sum = sum+arr[i];
    }

    int start = 0, end = sum , ans = INT_MAX;
    while(start <= end)
    {
        int mid = (start + end)/2;
        if(isPossible( arr, n,m,mid)){
            ans = min(ans , mid);
            end = mid-1;
        }
        else
        {
            start = mid+1;
        }
    }
    return ans;
}

int main()
{   
    int arr[] = {12,34,67,90};
    int n = sizeof(arr)/sizeof(arr[0]);
    cout<<min_Page( arr , n ,2);
    return 0;
}
